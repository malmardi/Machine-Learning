Decision Tree (DT) Classifier

•	DTmain.m: it is considered as the engine of the DT classifier; in which it guides the user step by step into the process of loading the datasets (train.data, train.label, test.data, and test.labels), train the model, prune the tree, apply cross validation, and test the model.
•	DTtrain.m: trains the DT model based on the input parameters (train.data and train.labels). The output of this function is the trained DT model. It uses the “fitctree” function
•	DTprune.m: prunes the DT to the depth specified by the user. In Matlab, you can calculate the best depth that does not affect the accuracy of the tree. It turned out that the best depth is 35.
			   Note: I commented the code that finds the best depth, since it takes a long running time.
•	DTcrossValidation.m: applies cross validation on the model generated by DTtrain.m function. The purpose of this function is to have a better sense of the accuracy of your model. The input of this function are the trained model. The output of this function is averaged accuracy of the model.
•	DTpredict.m: runs the model against the test data (test.data) and finds the accuracy of the model. The inputs of this function are the trained model, test data (test.data), and test labels (test.labels). The output is the accuracy of the model.  

Ruuning the Code:
1. Open matlab
2. Open the directory where the m files are saved
3. Write DTmain
4. You will be prompted to enter the path of the data files. Ex: C:\Users\malmardi\Dropbox\machinelearning\ml
5. Now, the program will train your model. A status message will be displayed when training is finished.
6. The program now will ask for the depth of the tree. Please note that the best depth is 35 as calculated before.
7. After pruning the tree, the program will run cross validation directly.
8. The accuracy will be displayed after the cross validation is finished.
9. Now the program will run your model against the test data.
10. The accuracy on the test data will be displayed.